// Place your key bindings in this file to overwrite the defaults
[
  // Enable cmd+<num> to jump to tab
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  // These damn messages like to linger sometimes, shift+esc seems easier than this
  {
    "key": "ctrl+escape",
    "command": "workbench.action.closeMessages"
  },
  // Toggle case sensitivity for cmd+d
  {
    "key": "alt+cmd+x",
    "command": "toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  // Align plugin shortcut
  {
    "key": "alt+cmd+=",
    "command": "alignment.align",
    "when": "editorHasSelection"
  },
  // Toggle syntax at end of line (extension required)
  {
    "key": "ctrl+;",
    "command": "extension.toggleSemicolon",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+;",
    "command": "extension.toggleColon",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+,",
    "command": "extension.toggleComma",
    "when": "editorTextFocus"
  },
  // Use for the pasteAndIndent extension to clean up when pasting
  {
    "key": "cmd+v",
    "command": "pasteAndIndent.action",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "!editorTextFocus"
  },
  {
    "key": "cmd+shift+v",
    "command": "editor.action.clipboardPasteAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  // This is the default mapping for cmd+o
  {
    "key": "shift+cmd+t",
    "command": "workbench.action.showAllSymbols"
  },
  // Because cmd+p is annoying.
  // TODO: map to leader key for vim parity
  {
    "key": "cmd+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.quickOpen"
  },
  // Enable vim movement in other parts of vscode UI (file explorer, etc)
  {
      "key": "j",
      "command": "list.focusDown",
      "when": "listFocus"
  },
  {
      "key": "k",
      "command": "list.focusUp",
      "when": "listFocus"
  },
  {
      "key": "enter",
      "command": "list.select",
      "when": "explorerViewletVisible && filesExplorerFocus"
  },
  {
      "key": "o",
      "command": "list.toggleExpand",
      "when": "listFocus"
  },
  {
      "key": "ctrl+j",
      "command": "selectNextSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
      "key": "ctrl+k",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
      "key": "ctrl+j",
      "command": "workbench.action.quickOpenNavigateNext",
      "when": "inQuickOpen"
  },
  {
      "key": "ctrl+k",
      "command": "workbench.action.quickOpenNavigatePrevious",
      "when": "inQuickOpen"
  },
  // Mappings to match bindings in vim plugin
  // Toggle sidebar
  {
    "key": "\\ b",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!editorTextFocus"
  },
  // Jump to file explorer
  {
    "key": "\\ t",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "!editorTextFocus"
  },
  // Focus editor group (split panes) by number
  {
    "key": "\\ 1" ,
    "command": "workbench.action.focusFirstEditorGroup",
    "when": "!editorTextFocus"
  },
  {
    "key": "\\ 2" ,
    "command": "workbench.action.focusSecondEditorGroup",
    "when": "!editorTextFocus"
  },
  {
    "key": "\\ 3" ,
    "command": "workbench.action.focusThirdEditorGroup",
    "when": "!editorTextFocus"
  }
]
