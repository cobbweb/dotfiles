# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
'atom-text-editor':
  '\\ w': 'core:save'

#   'enter': 'editor:newline'
    # 'cmd-p': 'command-palette:toggle'

'atom-workspace atom-text-editor:not([mini])[data-grammar^="source ts"]':
  'ctrl-;': 'trailing-semicolon:semicolon'#

'atom-text-editor.vim-mode-plus.insert-mode':
  '\\ w': 'user:activate-normal-mode-and-save'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  '\\ p': 'fuzzy-finder:toggle-file-finder'
  '\\ \\ f': 'easy-motion-redux:letter'
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
